name: Deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      API_URL: ${{ secrets.API_URL }}

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci
      - name: 🛠️ Compile code
        run: npm run build-prod

      - name: 🚚 Deliver client artifact
        uses: actions/upload-pages-artifact@v1
        with:
          name: client-artifact
          path: "./build"

      - name: 🚚 Deliver server artifact
        run: |
          mkdir build-server
          cp -r package.json package-lock.json src/server .git build build-server/
          ls build-server
        working-directory: ${{ github.workspace }}
      - uses: actions/upload-artifact@v3.1.3
        with:
          name: server-artifact
          path: "./build-server"

  deploy-client:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    needs: build
    steps:
      - name: ⚙️ Setup Pages
        uses: actions/configure-pages@v3
        with:
          enablement: true
          token: ${{ secrets.GH_PAGES_TOKEN }}

      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          artifact_name: client-artifact
          token: ${{ secrets.GH_PAGES_TOKEN }}

  deploy-server:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download server artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: server-artifact
          path: "."
      - name: 🚀 Deploy to Heroku
        uses: behe/heroku-build@v1.2
        with:
          app-name: ${{secrets.HEROKU_APP_NAME}}
          api-key: ${{secrets.HEROKU_API_TOKEN}}
          path: "."
